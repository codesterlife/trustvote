{
  "contractName": "Election",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_positionIds",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "positionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "candidateId",
          "type": "uint256"
        }
      ],
      "name": "CandidateAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum Election.ElectionPhase",
          "name": "newPhase",
          "type": "uint8"
        }
      ],
      "name": "PhaseChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "positionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "candidateId",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "VoterWhitelisted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_candidateId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_positionId",
          "type": "uint256"
        }
      ],
      "name": "addCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_positionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_candidateId",
          "type": "uint256"
        }
      ],
      "name": "getCandidateVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_positionId",
          "type": "uint256"
        }
      ],
      "name": "getCandidateCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_positionId",
          "type": "uint256"
        }
      ],
      "name": "getCandidatesForPosition",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPositionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_positionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getPositionCandidate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_positionId",
          "type": "uint256"
        }
      ],
      "name": "getWinner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_positionId",
          "type": "uint256"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "hasVotedForPosition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_candidateId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_positionId",
          "type": "uint256"
        }
      ],
      "name": "isCandidateInPosition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_positionId",
          "type": "uint256"
        }
      ],
      "name": "isValidPosition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "phase",
      "outputs": [
        {
          "internalType": "enum Election.ElectionPhase",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "positionIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Election.ElectionPhase",
          "name": "_phase",
          "type": "uint8"
        }
      ],
      "name": "setElectionPhase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "title",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_positionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_candidateId",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "whitelistVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_voters",
          "type": "address[]"
        }
      ],
      "name": "whitelistVoters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f86380380610f8683398101604081905261002f91610195565b600061003a866102ab565b905080600460006101000a81548160ff0219169083600281111561005e5761005d6102a5565b5b021790555084600081905550836001819055508260038190555080600481600681111561008d5761008c6102a5565b5b021760048160ff16118015156101015750600660048460ff16600681111561015a5761015a6102a5565b5b021790555085805461047f9061070f565b80601f01602080910402602001604051908101604052809291908181526020018280546104ab9061070f565b80156104f85780601f106104cd576101008083540402835291602001916104f8565b820191906000526020600020905b8154815290600101906020018083116104db57829003601f168201915b505050505081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505060009050600460006001811115610557575b9050905060046001600081111561056e575b505050506006565b81516101289060058301906020850190610145565b5060208101516001820155604081015160028201556060810151805161015590600383019060208401906101ae565b5060800151600490910180546001600160a01b0319166001600160a01b03909216919091179055610333565b82805461015190610318565b60008252602080832092915050565b82805482825590600052602060002090810192821561019b579160200282015b8281111561019b5782518255916020019190600101906101a7565b50505050565b60006040828403121561016657600080fd5b80516003548110156101b957600080fd5b64464c5549445160d81b8082526020830191909152600091610240565b61025a3561024c60086041841515815260200190565b601781610261565b6d53796e7461786572726f722e36303560901b60408201526060016000f35b865181526020880151602082015260408801516040820152606088015160608201528360808201528260a082015260c0810191505095945050505050565b60008b838c8e8101926020808e01216102a557600080fd5b63ffffffff841681835290610100840191508d82820101610124820191508c908201906000858385875afa600082610295576102a557600080fd5b5050806000039150508d8301608081016102a557600080fd5b6102c2565b6000610325858d898201610100840190565b95509450505050565b6000614ff1610311565b508060008155600181556102f557610c50565b60006102aa82610741565b8183823760009101908152919050565b6040805190810167ffffffffffffffff8111828210171561033357634e487b7160e01b600052604160045260246000fd5b604052919050565b61094080620007516000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80636c24270c116100b2578063ccce43c911610081578063d4f50f9811610066578063d4f50f9814610302578063f14ae07814610315578063f5a134311461033557600080fd5b8063ccce43c9146102dc578063d37b96c1146102ef57600080fd5b80636c24270c146102435780638da5cb5b1461026e57806391b7f5ed14610281578063c5ff5c03146102c957600080fd5b80632c0f923b116101095780632c0f923b146101a657806331a72188146101cb5780633f6a25a3146101de5780634665096d146101f15780634b1d3ede1461022d57600080fd5b806302eba4611461013b57806313bc50371461015657806317329fb31461016b5780631ef3755214610193575b600080fd5b61014e610149366004610650565b610348565b005b61014e6101643660046107e5565b6103dc565b61017e6101793660046107e5565b61043c565b60405190151581526020015b60405180910390f35b6000545b60405190815260200161018a565b6101b96101b436600461067f565b610451565b60405161018a91906108a0565b61017e6101d93660046107e5565b61047c565b6101976101ec366004610650565b61051e565b6102157f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161018a565b61017e61023b3660046106b3565b610562565b61025661025136600461067f565b610579565b60405161018a9796959493929190610800565b6102967f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161018a565b61017e6102d736600461067f565b610582565b61014e6102ea366004610717565b61059a565b61017e6102fd366004610755565b6105b8565b6101976103103660046108e9565b6105d5565b61017e610323366004610755565b6105ea565b61014e6103433660046108e9565b6105fc565b6000546001600160a01b031633146103a35760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e63000000604482015260640160405180910390fd5b60005b600354811015610368578082600381106103c257610362565b01546103d7565b6103ca565b50505050565b600080808080808080808080806103ca565b6104148380858c8f8d8e8c8d968765858680828f898c8b958a99999887979596939493989a9b9c9d9e9f505050505050505050505050505050565b5050505050505050505050505050505050565b6000546001600160a01b03163314610467575b50610d1d565b50565b6000805b6003548110156104a5578360038281548110610485576104a1565b9060005260206000200154036104a5576001915050610514565b5060005b6003548110156104f4578360038281548110610485576104a1565b90600052602060002001540361051257600191505061054d565b6003548110156104f45750600090505b92915050565b600354818310156105475760405163ef7119df60e01b815260048101849052602401610538565b60405180910390fd5b506003818154811061055a57600080fd5b600091825260209091200154905081565b6005602052600090815260409020805460619290921b7fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff1690565b600092915050565b600092915050565b60006105968360038481548110610485576104a1565b6000805b60078b5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f9a5050505050505050505050905b50505050505050505050505050565b600092915050565b600092915050565b600092915050565b9392505050565b60008060006106108a8a6105d5565b610468565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561066357600080fd5b82359150602083013561067581610925565b809150509250929050565b60006020828403121561069157600080fd5b5035919050565b60008083601f8401126106aa57600080fd5b50813567ffffffffffffffff8111156106c257600080fd5b6020830191508360208285010111156106da57600080fd5b9250929050565b600080602083850312156106f457600080fd5b823567ffffffffffffffff81111561070b57600080fd5b6107178582860161070e565b90969095509350505050565b6000806020838503121561072a57600080fd5b823567ffffffffffffffff81111561074157600080fd5b6107178582860161070e565b6000806040838503121561076857600080fd5b823561077381610925565b9150602083013590509250929050565b60008060006060848603121561079857600080fd5b833567ffffffffffffffff8111156107af57600080fd5b84016080818703121561075f56505050505050565b60008082840361010081146107d657600080fd5b83359250602084013591505b50915091565b600080604083850312156107f857600080fd5b50508035926020909101359150565b61010081016108a0826000815260008251601f1982360301835261084d8183868d5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f9a505050505050505050505050505050505050505050505050505050505050505050505050505050505050565b60405181810167ffffffffffffffff8111828210171561061057600080fd5b6020808252825182820181905260009190848201906080850190845b8181101561087d57835183529284019291840191600101610861565b50909695505050505050565b6000808335601e198436030181126108b857600080fd5b83018035915067ffffffffffffffff8211156108d357600080fd5b6020908236031215610d1d57600080fd5b60008060006060848603121561077c56505050565b60008060006040848603121561081b56505050565b60008151808452815b818110156109945760208185018101518683018201520161089e565b506000602082860101526020601f19601f83011685010191505092915050565b60006106097ca19d5f20a40b1949a2819b98296982984b9d5f28a8a82988382900390565b610ba87f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db381565b604e8061095a565b61010081016108a0826000815260008251601f1982360301835261084d818386610aa4565b60405161087981610949565b906108c5565b600061093a9050565b60006108a0610949565b60008281526020818152604080832080546001600160a01b0319167eac05be0133d9b3b077042e8b4d3aa1b5f17c1d1c9a0e5abde5eeba84c752e18054851c608a56596ece1565b60608101919091526108b3815260200161094956fea2646970667358221220a9b1ced34b53cc00fe98c5ec5ae1b7ee30d1f9ad51e61f5d3d4df80fbfec15a064736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c80636c24270c116100b2578063ccce43c911610081578063d4f50f9811610066578063d4f50f9814610302578063f14ae07814610315578063f5a134311461033557600080fd5b8063ccce43c9146102dc578063d37b96c1146102ef57600080fd5b80636c24270c146102435780638da5cb5b1461026e57806391b7f5ed14610281578063c5ff5c03146102c957600080fd5b80632c0f923b116101095780632c0f923b146101a657806331a72188146101cb5780633f6a25a3146101de5780634665096d146101f15780634b1d3ede1461022d57600080fd5b806302eba4611461013b57806313bc50371461015657806317329fb31461016b5780631ef3755214610193575b600080fd5b61014e610149366004610650565b610348565b005b61014e6101643660046107e5565b6103dc565b61017e6101793660046107e5565b61043c565b60405190151581526020015b60405180910390f35b6000545b60405190815260200161018a565b6101b96101b436600461067f565b610451565b60405161018a91906108a0565b61017e6101d93660046107e5565b61047c565b6101976101ec366004610650565b61051e565b6102157f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161018a565b61017e61023b3660046106b3565b610562565b61025661025136600461067f565b610579565b60405161018a9796959493929190610800565b6102967f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161018a565b61017e6102d736600461067f565b610582565b61014e6102ea366004610717565b61059a565b61017e6102fd366004610755565b6105b8565b6101976103103660046108e9565b6105d5565b61017e610323366004610755565b6105ea565b61014e6103433660046108e9565b6105fc565b6000546001600160a01b031633146103a35760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e63000000604482015260640160405180910390fd5b60005b600354811015610368578082600381106103c257610362565b01546103d7565b6103ca565b50505050565b600080808080808080808080806103ca565b6104148380858c8f8d8e8c8d968765858680828f898c8b958a99999887979596939493989a9b9c9d9e9f505050505050505050505050505050565b5050505050505050505050505050505050565b6000546001600160a01b03163314610467575b50610d1d565b50565b6000805b6003548110156104a5578360038281548110610485576104a1565b9060005260206000200154036104a5576001915050610514565b5060005b6003548110156104f4578360038281548110610485576104a1565b90600052602060002001540361051257600191505061054d565b6003548110156104f45750600090505b92915050565b600354818310156105475760405163ef7119df60e01b815260048101849052602401610538565b60405180910390fd5b506003818154811061055a57600080fd5b600091825260209091200154905081565b6005602052600090815260409020805460619290921b7fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff1690565b600092915050565b600092915050565b60006105968360038481548110610485576104a1565b6000805b60078b5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f9a5050505050505050505050905b50505050505050505050505050565b600092915050565b600092915050565b600092915050565b9392505050565b60008060006106108a8a6105d5565b610468565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561066357600080fd5b82359150602083013561067581610925565b809150509250929050565b60006020828403121561069157600080fd5b5035919050565b60008083601f8401126106aa57600080fd5b50813567ffffffffffffffff8111156106c257600080fd5b6020830191508360208285010111156106da57600080fd5b9250929050565b600080602083850312156106f457600080fd5b823567ffffffffffffffff81111561070b57600080fd5b6107178582860161070e565b90969095509350505050565b6000806020838503121561072a57600080fd5b823567ffffffffffffffff81111561074157600080fd5b6107178582860161070e565b6000806040838503121561076857600080fd5b823561077381610925565b9150602083013590509250929050565b60008060006060848603121561079857600080fd5b833567ffffffffffffffff8111156107af57600080fd5b84016080818703121561075f56505050505050565b60008082840361010081146107d657600080fd5b83359250602084013591505b50915091565b600080604083850312156107f857600080fd5b50508035926020909101359150565b61010081016108a0826000815260008251601f1982360301835261084d8183868d5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f9a505050505050505050505050505050505050505050505050505050505050505050505050505050505050565b60405181810167ffffffffffffffff8111828210171561061057600080fd5b6020808252825182820181905260009190848201906080850190845b8181101561087d57835183529284019291840191600101610861565b50909695505050505050565b6000808335601e198436030181126108b857600080fd5b83018035915067ffffffffffffffff8211156108d357600080fd5b6020908236031215610d1d57600080fd5b60008060006060848603121561077c56505050565b60008060006040848603121561081b56505050565b60008151808452815b818110156109945760208185018101518683018201520161089e565b506000602082860101526020601f19601f83011685010191505092915050565b60006106097ca19d5f20a40b1949a2819b98296982984b9d5f28a8a82988382900390565b610ba87f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db381565b604e8061095a565b61010081016108a0826000815260008251601f1982360301835261084d818386610aa4565b60405161087981610949565b906108c5565b600061093a9050565b60006108a0610949565b60008281526020818152604080832080546001600160a01b0319167eac05be0133d9b3b077042e8b4d3aa1b5f17c1d1c9a0e5abde5eeba84c752e18054851c608a56596ece1565b60608101919091526108b3815260200161094956fea2646970667358221220a9b1ced34b53cc00fe98c5ec5ae1b7ee30d1f9ad51e61f5d3d4df80fbfec15a064736f6c63430008110033",
  "source": "",
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x11C8d37fDFdf0e9bdD8Ad9B62FB977E9d4E9617D",
      "transactionHash": "0x1e1acb7aac6f80f3839a04cb2db7f7e5a6fa4c398b69b599acb87cddb8527d7e"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-04-10T10:15:37.747Z",
  "networkType": "ethereum",
  "devdoc": {
    "title": "Election",
    "details": "Contract for managing a single election",
    "methods": {
      "addCandidate(uint256,uint256)": {
        "details": "Add a candidate to a position",
        "params": {
          "_candidateId": "ID of the candidate to add",
          "_positionId": "ID of the position the candidate is running for"
        }
      },
      "constructor": {
        "details": "Constructor to create a new election",
        "params": {
          "_admin": "Address of the election administrator",
          "_endTime": "End time of the election as Unix timestamp",
          "_positionIds": "Array of position IDs to include in the election",
          "_startTime": "Start time of the election as Unix timestamp",
          "_title": "Title of the election"
        }
      },
      "getCandidateVotes(uint256,uint256)": {
        "details": "Get the vote count for a specific candidate in a position",
        "params": {
          "_candidateId": "ID of the candidate",
          "_positionId": "ID of the position"
        },
        "returns": {
          "_0": "The number of votes received by the candidate"
        }
      },
      "getCandidatesForPosition(uint256)": {
        "details": "Get all candidates for a specific position",
        "params": {
          "_positionId": "ID of the position"
        },
        "returns": {
          "_0": "Array of candidate IDs for the position"
        }
      },
      "getCandidateCount(uint256)": {
        "details": "Get the candidate count for a specific position",
        "params": {
          "_positionId": "ID of the position"
        },
        "returns": {
          "_0": "The number of candidates for the position"
        }
      },
      "getPositionCandidate(uint256,uint256)": {
        "details": "Get a candidate ID for a position by index",
        "params": {
          "_index": "Index of the candidate in the position's candidate array",
          "_positionId": "ID of the position"
        },
        "returns": {
          "_0": "The ID of the candidate at the specified index"
        }
      },
      "getPositionCount()": {
        "details": "Get the number of positions in the election",
        "returns": {
          "_0": "The number of positions"
        }
      },
      "getWinner(uint256)": {
        "details": "Get the winner for a specific position",
        "params": {
          "_positionId": "ID of the position to check"
        },
        "returns": {
          "_0": "The ID of the winning candidate (or 0 if no votes)"
        }
      },
      "hasVoted(address,uint256)": {
        "details": "Check if a voter has voted for a specific position",
        "params": {
          "_positionId": "ID of the position to check",
          "_voter": "Address of the voter to check"
        },
        "returns": {
          "_0": "True if the voter has voted for the position"
        }
      },
      "isCandidateInPosition(uint256,uint256)": {
        "details": "Check if a candidate is running for a specific position",
        "params": {
          "_candidateId": "ID of the candidate to check",
          "_positionId": "ID of the position to check"
        },
        "returns": {
          "_0": "True if the candidate is running for the position"
        }
      },
      "isValidPosition(uint256)": {
        "details": "Check if a position ID is valid for this election",
        "params": {
          "_positionId": "ID of the position to check"
        },
        "returns": {
          "_0": "True if the position ID is valid"
        }
      },
      "setElectionPhase(uint8)": {
        "details": "Change the phase of the election",
        "params": {
          "_phase": "New phase to set"
        }
      },
      "vote(uint256,uint256)": {
        "details": "Cast a vote for a candidate in a position",
        "params": {
          "_candidateId": "ID of the candidate to vote for",
          "_positionId": "ID of the position to vote for"
        }
      },
      "whitelistVoter(address)": {
        "details": "Whitelist a voter to participate in the election",
        "params": {
          "_voter": "Address of the voter to whitelist"
        }
      },
      "whitelistVoters(address[])": {
        "details": "Batch whitelist multiple voters",
        "params": {
          "_voters": "Array of voter addresses to whitelist"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}
